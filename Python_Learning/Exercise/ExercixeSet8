Given a list of numbers, write a Python function to return the list of prime numbers present in it.

Example: input:[7,9,11,13,15,20,23] output:[7,11,13,23]

Write a python function find_common_characters(msg1,msg2) to display all the common characters between given two strings. Return -1 if there are no matching characters.

Note: Ignore blank spaces if there are any. Perform case sensitive string comparison wherever necessary.

Example: msg1="I like Python", msg2="Java is a very popular language" output=lieyon

Write a python function, find_pairs_of_numbers(num_list,n) which accepts a list of positive integers with no repetitions and returns count of pairs of numbers in the list that adds up to n. The function should return 0, if no such pairs are found in the list.

Example: num_list=[1, 2, 7, 4, 5, 6, 0, 3], n=6 output:3

              num_list= [3, 4, 1, 8, 5, 9, 0, 6], n=9 output:4

The python function, find_average() given below, is written to accept a list of marks and return the average marks. On execution, the program is resulting in an error.

def find_average(mark_list):
          total=0
          for i in range(0, len(mark_list)):
                   total+=mark_list1[i]
          marks_avg=total/len(mark_list)
          return marks_avg
m_list=[1,2,3,4]
print("Average marks:", find_average(m_list))
1: Add code to handle the exception occurring in the code.

2: Make the necessary correction in the program to remove the error.

3: Make the following changes in the code, execute, observe the results. Add code to handle the errors occurring in each case.

Case – 1: Initialize m_list as ["1",2,3,4]

Case – 2: Initialize m_list as given below

mark1="A"
mark1=int("A")
m_list=[mark1,2,3,4]
Case – 3: Initialize m_list as []

Case – 4: Make the following change in the for loop statement

for i in range(0, len(mark_list)+1):